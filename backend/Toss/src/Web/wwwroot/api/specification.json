{
  "x-generator": "NSwag v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Toss API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/AICopilot/ask": {
      "post": {
        "tags": [
          "AICopilot"
        ],
        "operationId": "PostApiAICopilotAsk",
        "requestBody": {
          "x-name": "query",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AskAIQuery"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/AICopilot/suggestions": {
      "get": {
        "tags": [
          "AICopilot"
        ],
        "operationId": "GetApiAICopilotSuggestions",
        "parameters": [
          {
            "name": "ShopId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "MaxSuggestions",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "PostApiAuthLogin",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "PostApiAuthRefresh",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "PostApiAuthLogout",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Auth/verify": {
      "get": {
        "tags": [
          "Auth"
        ],
        "operationId": "GetApiAuthVerify",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Buying/purchase-orders": {
      "post": {
        "tags": [
          "Buying"
        ],
        "operationId": "PostApiBuyingPurchaseOrders",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurchaseOrderCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Buying/purchase-orders/{id}": {
      "get": {
        "tags": [
          "Buying"
        ],
        "operationId": "GetApiBuyingPurchaseOrders",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Buying/purchase-orders/{id}/approve": {
      "post": {
        "tags": [
          "Buying"
        ],
        "operationId": "PostApiBuyingPurchaseOrdersApprove",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovePurchaseOrderCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/CRM/customers": {
      "post": {
        "tags": [
          "CRM"
        ],
        "operationId": "PostApiCRMCustomers",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "CRM"
        ],
        "operationId": "GetApiCRMCustomers",
        "parameters": [
          {
            "name": "ShopId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/CRM/customers/{id}": {
      "get": {
        "tags": [
          "CRM"
        ],
        "operationId": "GetApiCRMCustomers2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Dashboard/summary": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "GetApiDashboardSummary",
        "parameters": [
          {
            "name": "ShopId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Dashboard/sales-trends": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "GetApiDashboardSalesTrends",
        "parameters": [
          {
            "name": "ShopId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "StartDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          },
          {
            "name": "EndDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Dashboard/top-products": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "GetApiDashboardTopProducts",
        "parameters": [
          {
            "name": "ShopId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "TopN",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Dashboard/cash-flow": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "GetApiDashboardCashFlow",
        "parameters": [
          {
            "name": "ShopId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "StartDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          },
          {
            "name": "EndDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/GroupBuying/pools": {
      "post": {
        "tags": [
          "GroupBuying"
        ],
        "operationId": "PostApiGroupBuyingPools",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePoolCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/GroupBuying/pools/active": {
      "get": {
        "tags": [
          "GroupBuying"
        ],
        "operationId": "GetApiGroupBuyingPoolsActive",
        "parameters": [
          {
            "name": "AreaGroup",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/GroupBuying/pools/{id}": {
      "get": {
        "tags": [
          "GroupBuying"
        ],
        "operationId": "GetApiGroupBuyingPools",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/GroupBuying/pools/{poolId}/join": {
      "post": {
        "tags": [
          "GroupBuying"
        ],
        "operationId": "PostApiGroupBuyingPoolsJoin",
        "parameters": [
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinPoolCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/GroupBuying/pools/{poolId}/confirm": {
      "post": {
        "tags": [
          "GroupBuying"
        ],
        "operationId": "PostApiGroupBuyingPoolsConfirm",
        "parameters": [
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/GroupBuying/pools/{poolId}/generate-po": {
      "post": {
        "tags": [
          "GroupBuying"
        ],
        "operationId": "PostApiGroupBuyingPoolsGeneratePo",
        "parameters": [
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/GroupBuying/participations": {
      "get": {
        "tags": [
          "GroupBuying"
        ],
        "operationId": "GetApiGroupBuyingParticipations",
        "parameters": [
          {
            "name": "ShopId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "ActiveOnly",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/GroupBuying/opportunities": {
      "get": {
        "tags": [
          "GroupBuying"
        ],
        "operationId": "GetApiGroupBuyingOpportunities",
        "parameters": [
          {
            "name": "ShopId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "MaxDistanceKm",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "x-position": 2
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Inventory/products": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "operationId": "PostApiInventoryProducts",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Inventory"
        ],
        "operationId": "GetApiInventoryProducts",
        "parameters": [
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Inventory/stock-levels": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "operationId": "GetApiInventoryStockLevels",
        "parameters": [
          {
            "name": "ShopId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "OnlyLowStock",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Inventory/low-stock-alerts": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "operationId": "GetApiInventoryLowStockAlerts",
        "parameters": [
          {
            "name": "ShopId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "OnlyUnacknowledged",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Inventory/stock/adjust": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "operationId": "PostApiInventoryStockAdjust",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdjustStockCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Inventory/stock/movements": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "operationId": "GetApiInventoryStockMovements",
        "parameters": [
          {
            "name": "ShopId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Logistics/delivery-runs": {
      "post": {
        "tags": [
          "Logistics"
        ],
        "operationId": "PostApiLogisticsDeliveryRuns",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSharedDeliveryRunCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Logistics"
        ],
        "operationId": "GetApiLogisticsDeliveryRuns",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DeliveryStatus"
                }
              ]
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Logistics/delivery-runs/{id}/driver-view": {
      "get": {
        "tags": [
          "Logistics"
        ],
        "operationId": "GetApiLogisticsDeliveryRunsDriverView",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "RunId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "DriverId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Logistics/delivery-runs/{id}/status": {
      "post": {
        "tags": [
          "Logistics"
        ],
        "operationId": "PostApiLogisticsDeliveryRunsStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeliveryStatusCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Logistics/delivery-runs/{id}/assign-driver": {
      "post": {
        "tags": [
          "Logistics"
        ],
        "operationId": "PostApiLogisticsDeliveryRunsAssignDriver",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignDriverCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Logistics/delivery-stops/{stopId}/proof": {
      "post": {
        "tags": [
          "Logistics"
        ],
        "operationId": "PostApiLogisticsDeliveryStopsProof",
        "parameters": [
          {
            "name": "stopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CaptureProofOfDeliveryCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Payments/pay-links": {
      "post": {
        "tags": [
          "Payments"
        ],
        "operationId": "PostApiPaymentsPayLinks",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePayLinkCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Payments/record": {
      "post": {
        "tags": [
          "Payments"
        ],
        "operationId": "PostApiPaymentsRecord",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordPaymentCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "operationId": "GetApiPayments",
        "parameters": [
          {
            "name": "ShopId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Sales": {
      "post": {
        "tags": [
          "Sales"
        ],
        "operationId": "CreateSale",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Sales"
        ],
        "operationId": "GetSales",
        "parameters": [
          {
            "name": "ShopId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SaleStatus"
                }
              ]
            },
            "x-position": 4
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Sales/daily-summary": {
      "get": {
        "tags": [
          "Sales"
        ],
        "operationId": "GetDailySummary",
        "parameters": [
          {
            "name": "ShopId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "Date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Sales/{id}/void": {
      "post": {
        "tags": [
          "Sales"
        ],
        "operationId": "VoidSale",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoidSaleCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Sales/{id}/receipt": {
      "post": {
        "tags": [
          "Sales"
        ],
        "operationId": "GenerateReceipt",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Settings/shop/{shopId}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "operationId": "GetApiSettingsShop",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "operationId": "PutApiSettingsShop",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShopSettingsCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Suppliers": {
      "post": {
        "tags": [
          "Suppliers"
        ],
        "operationId": "PostApiSuppliers",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSupplierCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Suppliers"
        ],
        "operationId": "GetApiSuppliers",
        "parameters": [
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Suppliers/{id}": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "operationId": "GetApiSuppliers2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Suppliers/{id}/products": {
      "post": {
        "tags": [
          "Suppliers"
        ],
        "operationId": "PostApiSuppliersProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkSupplierProductCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Suppliers"
        ],
        "operationId": "GetApiSuppliersProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "SupplierId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "ActiveOnly",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Suppliers/products/{productId}/pricing": {
      "put": {
        "tags": [
          "Suppliers"
        ],
        "operationId": "PutApiSuppliersProductsPricing",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSupplierPricingCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersRegister",
        "requestBody": {
          "x-name": "registration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersLogin",
        "parameters": [
          {
            "name": "useCookies",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "useSessionCookies",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "login",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/refresh": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersRefresh",
        "requestBody": {
          "x-name": "refreshRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/confirmEmail": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetApiUsersConfirmEmail",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "changedEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/resendConfirmationEmail": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersResendConfirmationEmail",
        "requestBody": {
          "x-name": "resendRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendConfirmationEmailRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/forgotPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersForgotPassword",
        "requestBody": {
          "x-name": "resetRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/resetPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersResetPassword",
        "requestBody": {
          "x-name": "resetRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/manage/2fa": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersManage2fa",
        "requestBody": {
          "x-name": "tfaRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Users/manage/info": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetApiUsersManageInfo",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersManageInfo",
        "requestBody": {
          "x-name": "infoRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfoRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AskAIQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "question": {
            "type": "string"
          },
          "context": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreatePurchaseOrderCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "expectedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shippingCost": {
            "type": "number",
            "format": "decimal"
          },
          "groupBuyPoolId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseOrderItemDto"
            }
          }
        }
      },
      "PurchaseOrderItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "ApprovePurchaseOrderCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "purchaseOrderId": {
            "type": "integer",
            "format": "int32"
          },
          "approvedBy": {
            "type": "string"
          }
        }
      },
      "CreateCustomerCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "allowsMarketing": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreatePoolCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "initiatorShopId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "minimumQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "maximumQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal"
          },
          "bulkDiscountPercentage": {
            "type": "number",
            "format": "decimal"
          },
          "closeDate": {
            "type": "string",
            "format": "date-time"
          },
          "estimatedShippingCost": {
            "type": "number",
            "format": "decimal"
          },
          "maxDistanceKm": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "JoinPoolCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "groupBuyPoolId": {
            "type": "integer",
            "format": "int32"
          },
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "quantityCommitted": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateProductCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sku": {
            "type": "string"
          },
          "barcode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "basePrice": {
            "type": "number",
            "format": "decimal"
          },
          "costPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "minimumStockLevel": {
            "type": "integer",
            "format": "int32"
          },
          "reorderQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isTaxable": {
            "type": "boolean"
          }
        }
      },
      "AdjustStockCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantityAdjustment": {
            "type": "integer",
            "format": "int32"
          },
          "movementType": {
            "$ref": "#/components/schemas/StockMovementType"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "StockMovementType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Sale",
          "Purchase",
          "Adjustment",
          "Return",
          "Transfer",
          "Damage",
          "Expiry"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "CreateSharedDeliveryRunCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "groupBuyPoolId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "scheduledDate": {
            "type": "string",
            "format": "date-time"
          },
          "areaGroup": {
            "type": "string",
            "nullable": true
          },
          "totalDeliveryCost": {
            "type": "number",
            "format": "decimal"
          },
          "stops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryStopDto"
            }
          }
        }
      },
      "DeliveryStopDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "deliveryInstructions": {
            "type": "string",
            "nullable": true
          },
          "purchaseOrderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "poolParticipationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "DeliveryStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Scheduled",
          "Assigned",
          "InProgress",
          "Completed",
          "Failed",
          "Cancelled"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      },
      "UpdateDeliveryStatusCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deliveryRunId": {
            "type": "integer",
            "format": "int32"
          },
          "newStatus": {
            "$ref": "#/components/schemas/DeliveryStatus"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AssignDriverCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deliveryRunId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CaptureProofOfDeliveryCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deliveryStopId": {
            "type": "integer",
            "format": "int32"
          },
          "proofType": {
            "$ref": "#/components/schemas/ProofOfDeliveryType"
          },
          "proofData": {
            "type": "string",
            "nullable": true
          },
          "recipientName": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProofOfDeliveryType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "PIN",
          "Photo",
          "Signature"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "GeneratePayLinkCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "description": {
            "type": "string"
          },
          "sourceType": {
            "type": "string",
            "nullable": true
          },
          "sourceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "customerPhone": {
            "type": "string",
            "nullable": true
          },
          "customerEmail": {
            "type": "string",
            "nullable": true
          },
          "expiryHours": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RecordPaymentCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "saleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchaseOrderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "paymentType": {
            "$ref": "#/components/schemas/PaymentType"
          },
          "transactionRef": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaymentType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Cash",
          "Card",
          "MobileMoney",
          "BankTransfer",
          "PayLink"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "CreateSaleCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentType"
          },
          "paymentReference": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemDto"
            }
          }
        }
      },
      "SaleItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal"
          },
          "discountAmount": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "SaleStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Pending",
          "Completed",
          "Voided",
          "Refunded"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "VoidSaleCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "saleId": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "UpdateShopSettingsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "taxRate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "enableGroupBuying": {
            "type": "boolean",
            "nullable": true
          },
          "enableSharedLogistics": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "CreateSupplierCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "companyRegNumber": {
            "type": "string",
            "nullable": true
          },
          "vatNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "paymentTermsDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creditLimit": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LinkSupplierProductCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierSKU": {
            "type": "string",
            "nullable": true
          },
          "basePrice": {
            "type": "number",
            "format": "decimal"
          },
          "leadTimeDays": {
            "type": "integer",
            "format": "int32"
          },
          "minOrderQuantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateSupplierPricingCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supplierProductId": {
            "type": "integer",
            "format": "int32"
          },
          "newBasePrice": {
            "type": "number",
            "format": "decimal"
          },
          "newLeadTimeDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "newMinOrderQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HttpValidationProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AccessTokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenType": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "twoFactorRecoveryCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ResendConfirmationEmailRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "resetCode": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "TwoFactorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sharedKey": {
            "type": "string"
          },
          "recoveryCodesLeft": {
            "type": "integer",
            "format": "int32"
          },
          "recoveryCodes": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "isTwoFactorEnabled": {
            "type": "boolean"
          },
          "isMachineRemembered": {
            "type": "boolean"
          }
        }
      },
      "TwoFactorRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enable": {
            "type": "boolean",
            "nullable": true
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "resetSharedKey": {
            "type": "boolean"
          },
          "resetRecoveryCodes": {
            "type": "boolean"
          },
          "forgetMachine": {
            "type": "boolean"
          }
        }
      },
      "InfoResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "isEmailConfirmed": {
            "type": "boolean"
          }
        }
      },
      "InfoRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "newEmail": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "oldPassword": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}