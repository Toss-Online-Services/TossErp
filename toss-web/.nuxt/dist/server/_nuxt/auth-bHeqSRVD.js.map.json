{"file":"auth-bHeqSRVD.js","mappings":";;;;;;;;;;;;;;;;;;AAAA,MAAA,OAAe,0BAA0B,CAAC,OAAO;AAC/C,QAAM,YAAY,aAAA;AAGlB,MAAI,CAAC,UAAU,iBAAiB;AAC9B,WAAO,WAAW,QAAQ;AAAA,EAC5B;AAGA,MAAI,GAAG,KAAK,oBAAoB;AAC9B,UAAM,qBAAqB,GAAG,KAAK;AACnC,QAAI,CAAC,UAAU,cAAc,MAAM,kBAAkB,GAAG;AACtD,YAAM,YAAY;AAAA,QAChB,YAAY;AAAA,QACZ,eAAe;AAAA,MAAA,CAChB;AAAA,IACH;AAAA,EACF;AACF,CAAC;","names":[],"sources":["../../../../middleware/auth.ts"],"sourcesContent":["export default defineNuxtRouteMiddleware((to) => {\r\n  const userStore = useUserStore()\r\n  \r\n  // If user is not authenticated, redirect to login\r\n  if (!userStore.isAuthenticated) {\r\n    return navigateTo('/login')\r\n  }\r\n  \r\n  // Check for specific permissions if required\r\n  if (to.meta.requiresPermission) {\r\n    const requiredPermission = to.meta.requiresPermission as string\r\n    if (!userStore.hasPermission.value(requiredPermission)) {\r\n      throw createError({\r\n        statusCode: 403,\r\n        statusMessage: 'Access denied. Insufficient permissions.'\r\n      })\r\n    }\r\n  }\r\n})\r\n"],"version":3}