{"version":3,"file":"default-Bmw45LJD.js","sources":["../../../../stores/settings.ts","../../../../layouts/default.vue"],"sourcesContent":["export const useSettingsStore = defineStore('settings', {\r\n  state: () => ({\r\n    darkMode: false,\r\n    language: 'en',\r\n    notifications: {\r\n      email: true,\r\n      push: true,\r\n      sms: false\r\n    },\r\n    sidebar: {\r\n      collapsed: false\r\n    }\r\n  }),\r\n  \r\n  actions: {\r\n    async loadSettings() {\r\n      // Load from localStorage or API\r\n      const saved = localStorage.getItem('toss-settings')\r\n      if (saved) {\r\n        this.$patch(JSON.parse(saved))\r\n      }\r\n    },\r\n    \r\n    async saveSettings() {\r\n      localStorage.setItem('toss-settings', JSON.stringify(this.$state))\r\n    },\r\n    \r\n    toggleDarkMode() {\r\n      this.darkMode = !this.darkMode\r\n      this.saveSettings()\r\n    },\r\n    \r\n    setLanguage(lang: string) {\r\n      this.language = lang\r\n      this.saveSettings()\r\n    },\r\n    \r\n    toggleSidebar() {\r\n      this.sidebar.collapsed = !this.sidebar.collapsed\r\n      this.saveSettings()\r\n    }\r\n  }\r\n})\r\n","<template>\r\n  <div class=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\r\n    <!-- Navigation -->\r\n    <AppNavigation />\r\n    \r\n    <!-- Main Content -->\r\n    <main class=\"flex-1\">\r\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <slot />\r\n      </div>\r\n    </main>\r\n    \r\n    <!-- AI Copilot Chat -->\r\n    <AICopilotChat />\r\n    \r\n    <!-- Global Notifications -->\r\n    <NotificationContainer />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n// Layout setup\r\nuseHead({\r\n  titleTemplate: '%s - TOSS ERP III',\r\n  meta: [\r\n    { name: 'viewport', content: 'width=device-width, initial-scale=1' },\r\n    { name: 'theme-color', content: '#1d4ed8' },\r\n  ],\r\n})\r\n\r\n// Initialize stores\r\nconst userStore = useUserStore()\r\nconst settingsStore = useSettingsStore()\r\n\r\n// Check authentication status\r\nonMounted(async () => {\r\n  await userStore.checkAuth()\r\n  await settingsStore.loadSettings()\r\n})\r\n</script>\r\n"],"names":["_ssrRenderAttrs","_mergeProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAO,MAAM,mBAAmB,YAAY,YAAY;AAAA,EACtD,OAAO,OAAO;AAAA,IACZ,UAAU;AAAA,IACV,UAAU;AAAA,IACV,eAAe;AAAA,MACb,OAAO;AAAA,MACP,MAAM;AAAA,MACN,KAAK;AAAA,IAAA;AAAA,IAEP,SAAS;AAAA,MACP,WAAW;AAAA,IAAA;AAAA,EACb;AAAA,EAGF,SAAS;AAAA,IACP,MAAM,eAAe;AAEnB,YAAM,QAAQ,aAAa,QAAQ,eAAe;AAClD,UAAI,OAAO;AACT,aAAK,OAAO,KAAK,MAAM,KAAK,CAAC;AAAA,MAC/B;AAAA,IACF;AAAA,IAEA,MAAM,eAAe;AACnB,mBAAa,QAAQ,iBAAiB,KAAK,UAAU,KAAK,MAAM,CAAC;AAAA,IACnE;AAAA,IAEA,iBAAiB;AACf,WAAK,WAAW,CAAC,KAAK;AACtB,WAAK,aAAA;AAAA,IACP;AAAA,IAEA,YAAY,MAAc;AACxB,WAAK,WAAW;AAChB,WAAK,aAAA;AAAA,IACP;AAAA,IAEA,gBAAgB;AACd,WAAK,QAAQ,YAAY,CAAC,KAAK,QAAQ;AACvC,WAAK,aAAA;AAAA,IACP;AAAA,EAAA;AAEJ,CAAC;;;;;ACpBD,YAAQ;AAAA,MACN,eAAe;AAAA,MACf,MAAM;AAAA,QACJ,EAAE,MAAM,YAAY,SAAS,sCAAA;AAAA,QAC7B,EAAE,MAAM,eAAe,SAAS,UAAA;AAAA,MAAU;AAAA,IAC5C,CACD;AAGiB,iBAAA;AACI,qBAAA;;;;;AA/Bf,YAAA,OAAAA,eAAAC,WAAA,EAAA,OAAM,8CAA0C,MAAA,CAAA,CAAA,GAAA;;;;;;;;;;;;;;;;;"}