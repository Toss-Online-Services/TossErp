version: '3.8'

services:
  # PostgreSQL Database
  stock-postgres:
    image: postgres:16-alpine
    container_name: tosserp-stock-postgres-dev
    environment:
      POSTGRES_DB: tosserp_stock
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - stock-postgres-data-dev:/var/lib/postgresql/data
    networks:
      - toss-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  stock-redis:
    image: redis:7-alpine
    container_name: tosserp-stock-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - stock-redis-data-dev:/data
    networks:
      - toss-network-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Broker
  stock-rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: tosserp-stock-rabbitmq-dev
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - stock-rabbitmq-data-dev:/var/lib/rabbitmq
    networks:
      - toss-network-dev
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  gateway:
    build:
      context: ./src/Gateway
      dockerfile: Dockerfile
    container_name: tosserp-gateway-dev
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - stock-postgres
      - stock-redis
      - stock-rabbitmq
    networks:
      - toss-network-dev

  # Web Client (Nuxt.js) - Development Mode
  web-client:
    build:
      context: ./src/clients/web
      dockerfile: Dockerfile.dev
    container_name: tosserp-web-client-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
    volumes:
      - ./src/clients/web:/app
      - /app/node_modules
    networks:
      - toss-network-dev
    depends_on:
      - gateway
    command: npm run dev

networks:
  toss-network-dev:
    driver: bridge

volumes:
  stock-postgres-data-dev:
  stock-redis-data-dev:
  stock-rabbitmq-data-dev:
