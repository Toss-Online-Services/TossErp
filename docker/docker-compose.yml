version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:16-alpine
    container_name: tosserp-postgres
    environment:
      POSTGRES_DB: tosserp_main
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - toss-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: tosserp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - toss-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: tosserp-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - toss-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Identity Service
  identity-api:
    build:
      context: ../src/Services/identity/Identity.API
      dockerfile: Dockerfile
    container_name: tosserp-identity-api
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - postgres
      - redis
    networks:
      - toss-network

  # Stock Service
  stock-api:
    build:
      context: ../src/Services/Stock/Stock.API
      dockerfile: Dockerfile
    container_name: tosserp-stock-api
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - toss-network

  # CRM Service
  crm-api:
    build:
      context: ../src/Services/crm/Crm.API
      dockerfile: Dockerfile
    container_name: tosserp-crm-api
    ports:
      - "5003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - postgres
      - redis
    networks:
      - toss-network

  # HR Service
  hr-api:
    build:
      context: ../src/Services/hr/HR.API
      dockerfile: Dockerfile
    container_name: tosserp-hr-api
    ports:
      - "5004:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - postgres
      - redis
    networks:
      - toss-network

  # Logistics Service
  logistics-api:
    build:
      context: ../src/Services/logistics/Logistics.API
      dockerfile: Dockerfile
    container_name: tosserp-logistics-api
    ports:
      - "5005:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - postgres
      - redis
    networks:
      - toss-network

  # PooledCredit Service
  pooledcredit-api:
    build:
      context: ../src/Services/pooledcredit/PooledCredit.API
      dockerfile: Dockerfile
    container_name: tosserp-pooledcredit-api
    ports:
      - "5006:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - postgres
      - redis
    networks:
      - toss-network

  # CreditEngine Service
  creditengine-api:
    build:
      context: ../src/Services/creditengine/CreditEngine.API
      dockerfile: Dockerfile
    container_name: tosserp-creditengine-api
    ports:
      - "5007:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - postgres
      - redis
    networks:
      - toss-network

  # AssetSharing Service
  assetsharing-api:
    build:
      context: ../src/Services/assetsharing/AssetSharing.API
      dockerfile: Dockerfile
    container_name: tosserp-assetsharing-api
    ports:
      - "5008:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - postgres
      - redis
    networks:
      - toss-network

  # API Gateway
  gateway:
    build:
      context: ../src/Gateway
      dockerfile: Dockerfile
    container_name: tosserp-gateway
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - identity-api
      - stock-api
      - crm-api
      - hr-api
      - logistics-api
      - pooledcredit-api
      - creditengine-api
      - assetsharing-api
    networks:
      - toss-network

  # Web Client
  web-client:
    build:
      context: ../src/clients/web
      dockerfile: Dockerfile.dev
    container_name: tosserp-web-client
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
    volumes:
      - ../src/clients/web:/app
      - /app/node_modules
    networks:
      - toss-network
    depends_on:
      - gateway
    command: npm run dev

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: tosserp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - gateway
      - web-client
    networks:
      - toss-network

volumes:
  postgres-data:
  redis-data:
  rabbitmq-data:

networks:
  toss-network:
    driver: bridge
