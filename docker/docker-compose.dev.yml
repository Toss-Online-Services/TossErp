version: '3.8'

services:
  # Development overrides
  postgres:
    environment:
      POSTGRES_DB: tosserp_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
      - ../scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro

  redis:
    ports:
      - "6379:6379"
    volumes:
      - redis-dev-data:/data

  rabbitmq:
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-dev-data:/var/lib/rabbitmq

  # Development services with hot reload
  web-client:
    build:
      context: ../src/clients/web
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ../src/clients/web:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
    command: npm run dev

  # Development monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: tosserp-prometheus-dev
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-dev-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - toss-network

  grafana:
    image: grafana/grafana:latest
    container_name: tosserp-grafana-dev
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-dev-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - toss-network

volumes:
  postgres-dev-data:
  redis-dev-data:
  rabbitmq-dev-data:
  prometheus-dev-data:
  grafana-dev-data:
