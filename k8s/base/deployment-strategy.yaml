# TOSS ERP Deployment Strategy Configuration
# Implements rolling updates with canary and blue/green deployment options

apiVersion: v1
kind: ConfigMap
metadata:
  name: deployment-strategy-config
  namespace: toss-erp
  labels:
    app.kubernetes.io/name: deployment-strategy
    app.kubernetes.io/component: config
data:
  # Rolling update strategy (default)
  rolling-update.yaml: |
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 25%
        maxSurge: 25%
    revisionHistoryLimit: 10
    progressDeadlineSeconds: 600
    
  # Blue/Green deployment strategy
  blue-green.yaml: |
    strategy:
      type: Recreate
    revisionHistoryLimit: 2
    progressDeadlineSeconds: 300
    
  # Canary deployment configuration
  canary.yaml: |
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    revisionHistoryLimit: 5
    progressDeadlineSeconds: 900

---
# Service for Blue/Green deployments
apiVersion: v1
kind: Service
metadata:
  name: gateway-active
  namespace: toss-erp
  labels:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: active-service
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/instance: toss-erp
    deployment-color: blue  # This will be switched between blue/green

---
# Argo Rollouts CRD for advanced deployment strategies
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: gateway-rollout
  namespace: toss-erp
  labels:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: rollout
spec:
  replicas: 3
  strategy:
    canary:
      canaryService: gateway-canary
      stableService: gateway-stable
      trafficRouting:
        nginx:
          stableIngress: toss-erp-ingress
          annotationPrefix: nginx.ingress.kubernetes.io
          additionalIngressAnnotations:
            canary-by-header: X-Canary
            canary-by-header-value: "true"
      steps:
      - setWeight: 10
      - pause: {duration: 2m}
      - setWeight: 20
      - pause: {duration: 2m}
      - setWeight: 50
      - pause: {duration: 5m}
      - setWeight: 100
      analysis:
        templates:
        - templateName: success-rate
        startingStep: 2
        args:
        - name: service-name
          value: gateway-canary
    blueGreen:
      activeService: gateway-active
      previewService: gateway-preview
      autoPromotionEnabled: false
      scaleDownDelaySeconds: 30
      prePromotionAnalysis:
        templates:
        - templateName: success-rate
        args:
        - name: service-name
          value: gateway-preview
      postPromotionAnalysis:
        templates:
        - templateName: success-rate
        args:
        - name: service-name
          value: gateway-active
  selector:
    matchLabels:
      app.kubernetes.io/name: gateway
      app.kubernetes.io/instance: toss-erp
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gateway
        app.kubernetes.io/instance: toss-erp
        app.kubernetes.io/version: "1.0.0"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: gateway
        image: ghcr.io/toss-online-services/toss-erp/gateway:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: ASPNETCORE_URLS
          value: "http://+:8080"
        envFrom:
        - configMapRef:
            name: toss-config
        - secretRef:
            name: toss-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-log
          mountPath: /var/log
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-log
        emptyDir: {}

---
# Analysis template for deployment validation
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: success-rate
  namespace: toss-erp
spec:
  args:
  - name: service-name
  metrics:
  - name: success-rate
    initialDelay: 60s
    interval: 20s
    count: 5
    successCondition: result[0] >= 0.95
    failureLimit: 3
    provider:
      prometheus:
        address: http://prometheus.monitoring.svc.cluster.local:9090
        query: |
          sum(irate(
            http_requests_total{job="{{args.service-name}}",code!~"5.."}[2m]
          )) / 
          sum(irate(
            http_requests_total{job="{{args.service-name}}"}[2m]
          ))
  - name: avg-response-time
    initialDelay: 60s
    interval: 20s
    count: 5
    successCondition: result[0] <= 0.5
    failureLimit: 3
    provider:
      prometheus:
        address: http://prometheus.monitoring.svc.cluster.local:9090
        query: |
          histogram_quantile(0.95,
            sum(rate(http_request_duration_seconds_bucket{job="{{args.service-name}}"}[2m])) by (le)
          )

---
# Canary service for canary deployments
apiVersion: v1
kind: Service
metadata:
  name: gateway-canary
  namespace: toss-erp
  labels:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: canary-service
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/instance: toss-erp

---
# Stable service for canary deployments
apiVersion: v1
kind: Service
metadata:
  name: gateway-stable
  namespace: toss-erp
  labels:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: stable-service
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/instance: toss-erp

---
# Preview service for blue/green deployments
apiVersion: v1
kind: Service
metadata:
  name: gateway-preview
  namespace: toss-erp
  labels:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: preview-service
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/instance: toss-erp
