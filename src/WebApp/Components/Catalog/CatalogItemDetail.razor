@using Catalog.Domain.DTOs
@inject ICatalogService CatalogService
@inject NavigationManager NavigationManager

@if (item == null)
{
    <p>Loading...</p>
}
else
{
    <div class="item-detail">
        <div class="item-image">
            <img src="@item.PictureUri" alt="@item.Name" />
        </div>

        <div class="item-info">
            <h1>@item.Name</h1>
            <p class="description">@item.Description</p>
            <p class="price">@item.Price @item.Currency</p>
            <p class="stock">@(item.AvailableStock > 0 ? "In Stock" : "Out of Stock")</p>
            <p class="brand">Brand: @item.CatalogBrand</p>
            <p class="type">Type: @item.CatalogType</p>

            @if (item.AvailableStock > 0)
            {
                <div class="quantity">
                    <label>Quantity:</label>
                    <input type="number" @bind="quantity" min="1" max="@item.AvailableStock" />
                </div>
                <button class="add-to-cart" @onclick="AddToCart">Add to Cart</button>
            }
        </div>
    </div>

    @if (similarItems?.Any() == true)
    {
        <div class="similar-items">
            <h2>Similar Items</h2>
            <div class="items-grid">
                @foreach (var similarItem in similarItems)
                {
                    <div class="similar-item" @onclick="() => NavigateToItem(similarItem.Id)">
                        <img src="@similarItem.PictureUri" alt="@similarItem.Name" />
                        <h3>@similarItem.Name</h3>
                        <p class="price">@similarItem.Price @similarItem.Currency</p>
                    </div>
                }
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public int Id { get; set; }

    private CatalogItemDto? item;
    private IEnumerable<CatalogItemDto>? similarItems;
    private int quantity = 1;

    protected override async Task OnInitializedAsync()
    {
        await LoadItem();
    }

    private async Task LoadItem()
    {
        item = await CatalogService.GetCatalogItemAsync(Id);
        if (item != null)
        {
            similarItems = await CatalogService.GetSimilarItemsAsync(Id);
        }
    }

    private void NavigateToItem(int id)
    {
        NavigationManager.NavigateTo($"/catalog/{id}");
    }

    private void AddToCart()
    {
        // Implement cart functionality
    }
} 