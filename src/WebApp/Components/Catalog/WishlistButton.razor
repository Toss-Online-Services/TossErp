@using Catalog.Domain.DTOs
@using Catalog.Domain.Services
@inject IWishlistService WishlistService
@inject NavigationManager NavigationManager

<button class="wishlist-button @(IsInWishlist ? "in-wishlist" : "")" @onclick="ToggleWishlist">
    <i class="fas @(IsInWishlist ? "fa-heart" : "fa-heart-o")"></i>
    @if (IsInWishlist)
    {
        <span>Remove from Wishlist</span>
    }
    else
    {
        <span>Add to Wishlist</span>
    }
</button>

@code {
    [Parameter]
    public int CatalogItemId { get; set; }

    [Parameter]
    public string UserId { get; set; } = string.Empty;

    private bool IsInWishlist { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(UserId))
        {
            IsInWishlist = await WishlistService.IsInWishlistAsync(UserId, CatalogItemId);
        }
    }

    private async Task ToggleWishlist()
    {
        if (string.IsNullOrEmpty(UserId))
        {
            NavigationManager.NavigateTo("/login");
            return;
        }

        if (IsInWishlist)
        {
            await WishlistService.RemoveFromWishlistAsync(UserId, CatalogItemId);
        }
        else
        {
            await WishlistService.AddToWishlistAsync(UserId, CatalogItemId);
        }

        IsInWishlist = !IsInWishlist;
    }
} 