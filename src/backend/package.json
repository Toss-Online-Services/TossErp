{
  "name": "@toss-erp/backend",
  "version": "1.0.0",
  "description": "TOSS ERP III Backend Services - Microservices architecture for rural township enterprises",
  "main": "index.js",
  "scripts": {
    "build": "tsc",
    "dev": "concurrently \"npm:dev:*\"",
    "dev:auth": "cd services/auth && npm run dev",
    "dev:crm": "cd services/crm && npm run dev",
    "dev:inventory": "cd services/inventory && npm run dev",
    "dev:accounting": "cd services/accounting && npm run dev",
    "dev:sales": "cd services/sales && npm run dev",
    "dev:manufacturing": "cd services/manufacturing && npm run dev",
    "dev:project": "cd services/project && npm run dev",
    "dev:hr": "cd services/hr && npm run dev",
    "dev:ai-copilot": "cd services/ai-copilot && npm run dev",
    "dev:workflow": "cd services/workflow && npm run dev",
    "dev:group-buying": "cd services/group-buying && npm run dev",
    "dev:asset-sharing": "cd services/asset-sharing && npm run dev",
    "dev:credit-engine": "cd services/credit-engine && npm run dev",
    "dev:logistics": "cd services/logistics && npm run dev",
    "dev:networking": "cd services/networking && npm run dev",
    "dev:gateway": "cd gateway && npm run dev",
    "start": "concurrently \"npm:start:*\"",
    "start:auth": "cd services/auth && npm start",
    "start:crm": "cd services/crm && npm start",
    "start:inventory": "cd services/inventory && npm start",
    "start:accounting": "cd services/accounting && npm start",
    "start:sales": "cd services/sales && npm start",
    "start:manufacturing": "cd services/manufacturing && npm start",
    "start:project": "cd services/project && npm start",
    "start:hr": "cd services/hr && npm start",
    "start:ai-copilot": "cd services/ai-copilot && npm start",
    "start:workflow": "cd services/workflow && npm start",
    "start:group-buying": "cd services/group-buying && npm start",
    "start:asset-sharing": "cd services/asset-sharing && npm start",
    "start:credit-engine": "cd services/credit-engine && npm start",
    "start:logistics": "cd services/logistics && npm start",
    "start:networking": "cd services/networking && npm start",
    "start:gateway": "cd gateway && npm start",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint . --ext .ts,.js",
    "lint:fix": "eslint . --ext .ts,.js --fix",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "migrate": "npm run migrate:auth && npm run migrate:crm && npm run migrate:inventory && npm run migrate:accounting && npm run migrate:sales && npm run migrate:manufacturing && npm run migrate:project && npm run migrate:hr && npm run migrate:ai-copilot && npm run migrate:workflow && npm run migrate:group-buying && npm run migrate:asset-sharing && npm run migrate:credit-engine && npm run migrate:logistics && npm run migrate:networking",
    "migrate:auth": "cd services/auth && npx prisma migrate deploy",
    "migrate:crm": "cd services/crm && npx prisma migrate deploy",
    "migrate:inventory": "cd services/inventory && npx prisma migrate deploy",
    "migrate:accounting": "cd services/accounting && npx prisma migrate deploy",
    "migrate:sales": "cd services/sales && npx prisma migrate deploy",
    "migrate:manufacturing": "cd services/manufacturing && npx prisma migrate deploy",
    "migrate:project": "cd services/project && npx prisma migrate deploy",
    "migrate:hr": "cd services/hr && npx prisma migrate deploy",
    "migrate:ai-copilot": "cd services/ai-copilot && npx prisma migrate deploy",
    "migrate:workflow": "cd services/workflow && npx prisma migrate deploy",
    "migrate:group-buying": "cd services/group-buying && npx prisma migrate deploy",
    "migrate:asset-sharing": "cd services/asset-sharing && npx prisma migrate deploy",
    "migrate:credit-engine": "cd services/credit-engine && npx prisma migrate deploy",
    "migrate:logistics": "cd services/logistics && npx prisma migrate deploy",
    "migrate:networking": "cd services/networking && npx prisma migrate deploy",
    "seed": "npm run seed:auth && npm run seed:crm && npm run seed:inventory && npm run seed:accounting",
    "seed:auth": "cd services/auth && npx prisma db seed",
    "seed:crm": "cd services/crm && npx prisma db seed",
    "seed:inventory": "cd services/inventory && npx prisma db seed",
    "seed:accounting": "cd services/accounting && npx prisma db seed",
    "setup": "npm install && npm run migrate && npm run seed",
    "clean": "rimraf dist node_modules services/*/dist services/*/node_modules gateway/dist gateway/node_modules",
    "postinstall": "npm run install:services && npm run install:gateway",
    "install:services": "concurrently \"npm:install:service:*\"",
    "install:service:auth": "cd services/auth && npm install",
    "install:service:crm": "cd services/crm && npm install",
    "install:service:inventory": "cd services/inventory && npm install",
    "install:service:accounting": "cd services/accounting && npm install",
    "install:service:sales": "cd services/sales && npm install",
    "install:service:manufacturing": "cd services/manufacturing && npm install",
    "install:service:project": "cd services/project && npm install",
    "install:service:hr": "cd services/hr && npm install",
    "install:service:ai-copilot": "cd services/ai-copilot && npm install",
    "install:service:workflow": "cd services/workflow && npm install",
    "install:service:group-buying": "cd services/group-buying && npm install",
    "install:service:asset-sharing": "cd services/asset-sharing && npm install",
    "install:service:credit-engine": "cd services/credit-engine && npm install",
    "install:service:logistics": "cd services/logistics && npm install",
    "install:service:networking": "cd services/networking && npm install",
    "install:gateway": "cd gateway && npm install"
  },
  "keywords": [
    "erp",
    "microservices",
    "ai",
    "rural-enterprises",
    "township",
    "business-automation",
    "south-africa"
  ],
  "author": "TOSS ERP Team",
  "license": "MIT",
  "devDependencies": {
    "@types/jest": "^29.5.8",
    "@types/node": "^20.9.0",
    "@typescript-eslint/eslint-plugin": "^6.11.0",
    "@typescript-eslint/parser": "^6.11.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.53.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "jest": "^29.7.0",
    "prettier": "^3.1.0",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.2.2"
  },
  "dependencies": {
    "@fastify/cors": "^8.4.0",
    "@fastify/helmet": "^11.1.1",
    "@fastify/jwt": "^7.2.4",
    "@fastify/multipart": "^8.0.0",
    "@fastify/rate-limit": "^9.0.1",
    "@fastify/swagger": "^8.12.0",
    "@fastify/swagger-ui": "^2.0.0",
    "@prisma/client": "^5.6.0",
    "bcryptjs": "^2.4.3",
    "bullmq": "^4.15.0",
    "dotenv": "^16.3.1",
    "fastify": "^4.24.3",
    "ioredis": "^5.3.2",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "nodemailer": "^6.9.7",
    "openai": "^4.20.1",
    "prisma": "^5.6.0",
    "pino": "^8.16.2",
    "pino-pretty": "^10.2.3",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "zod": "^3.22.4"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  }
}
