version: '3.8'

services:
  stock-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5001:80"
      - "5002:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;https://+:443
      - ConnectionStrings__DefaultConnection=Server=stock-db;Database=TossErpStock;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true
      - AIService__ApiKey=${AI_API_KEY}
      - AIService__Endpoint=${AI_ENDPOINT}
    depends_on:
      - stock-db
    networks:
      - tosserp-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  stock-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - stock-db-data:/var/opt/mssql
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - tosserp-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  stock-redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - stock-redis-data:/data
    networks:
      - tosserp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  stock-db-data:
  stock-redis-data:

networks:
  tosserp-network:
    driver: bridge
