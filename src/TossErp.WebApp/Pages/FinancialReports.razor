@page "/financial-reports"
@using TossErp.Shared.DTOs
@inject HttpClient Http

<PageTitle>Financial Reports</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudText Typo="Typo.h4" Class="mb-4">Financial Reports</MudText>
    
    <MudGrid>
        <MudItem xs="12" sm="6" md="3">
            <MudTextField T="DateTime?" @bind-Value="startDate" 
                          Label="Start Date" Variant="Variant.Outlined" />
        </MudItem>
        <MudItem xs="12" sm="6" md="3">
            <MudTextField T="DateTime?" @bind-Value="endDate" 
                          Label="End Date" Variant="Variant.Outlined" />
        </MudItem>
        <MudItem xs="12" sm="6" md="3">
            <MudSelect T="FinancialReportType" @bind-Value="selectedReportType" 
                       Label="Report Type" 
                       HelperText="Select the type of report">
                <MudSelectItem Value="@FinancialReportType.ProfitLoss">Profit & Loss</MudSelectItem>
                <MudSelectItem Value="@FinancialReportType.CashFlow">Cash Flow</MudSelectItem>
                <MudSelectItem Value="@FinancialReportType.BalanceSheet">Balance Sheet</MudSelectItem>
                <MudSelectItem Value="@FinancialReportType.Revenue">Revenue</MudSelectItem>
            </MudSelect>
        </MudItem>
        <MudItem xs="12" sm="6" md="3">
            <MudButton Color="Color.Primary" Variant="Variant.Filled" 
                       OnClick="GenerateReport" Class="mt-4">
                Generate Report
            </MudButton>
        </MudItem>
    </MudGrid>

    @if (reportData != null)
    {
        <MudCard Class="mt-4">
            <MudCardContent>
                <MudText Typo="Typo.h5" Class="mb-3">Financial Summary</MudText>
                <MudGrid>
                    <MudItem xs="12" sm="6" md="3">
                        <MudText><strong>Total Revenue:</strong> @reportData.TotalRevenue.ToString("C")</MudText>
                    </MudItem>
                    <MudItem xs="12" sm="6" md="3">
                        <MudText><strong>Total Expenses:</strong> @reportData.TotalExpenses.ToString("C")</MudText>
                    </MudItem>
                    <MudItem xs="12" sm="6" md="3">
                        <MudText><strong>Net Profit:</strong> @reportData.NetProfit.ToString("C")</MudText>
                    </MudItem>
                    <MudItem xs="12" sm="6" md="3">
                        <MudText><strong>Profit Margin:</strong> @((double)reportData.ProfitMargin).ToString("P")</MudText>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
        </MudCard>

        <MudTable T="FinancialReportItemDto" Items="@reportData.Items" Dense="true" Hover="true" 
                  Striped="true" Class="mt-4">
            <HeaderContent>
                <MudTh>Category</MudTh>
                <MudTh>Amount</MudTh>
                <MudTh>Percentage</MudTh>
                <MudTh>Type</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Category">@context.Category</MudTd>
                <MudTd DataLabel="Amount">@context.Amount.ToString("C")</MudTd>
                <MudTd DataLabel="Percentage">@context.Percentage.ToString("P")</MudTd>
                <MudTd DataLabel="Type">@context.Type</MudTd>
            </RowTemplate>
        </MudTable>
    }
</MudContainer>

@code {
    private DateTime? startDate = DateTime.Now.AddMonths(-1);
    private DateTime? endDate = DateTime.Now;
    private FinancialReportType selectedReportType = FinancialReportType.ProfitLoss;
    private FinancialReportDto? reportData;

    private async Task GenerateReport()
    {
        await Task.Delay(100);
        // Mock report generation
        reportData = new FinancialReportDto
        {
            TotalRevenue = 15499.96m,
            TotalExpenses = 12499.97m,
            NetProfit = 2999.99m,
            ProfitMargin = 0.194,
            Items = new List<FinancialReportItemDto>
            {
                new() { Category = "Product Sales", Amount = 15499.96m, Percentage = 1.0, Type = "Revenue" },
                new() { Category = "Cost of Goods", Amount = 9299.98m, Percentage = 0.6, Type = "Expense" },
                new() { Category = "Operating Expenses", Amount = 2000.00m, Percentage = 0.129, Type = "Expense" },
                new() { Category = "Marketing", Amount = 800.00m, Percentage = 0.052, Type = "Expense" },
                new() { Category = "Administrative", Amount = 400.00m, Percentage = 0.026, Type = "Expense" }
            }
        };
    }

    private async Task LoadFinancialReports()
    {
        await Task.Delay(100);
        // ... existing code ...
    }
} 