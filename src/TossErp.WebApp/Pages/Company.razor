@page "/company"
@using TossErp.WebApp.DTOs
@using TossErp.Shared.Enums
@inject HttpClient Http
@inject ISnackbar Snackbar

<PageTitle>Company Settings - TOSS ERP</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudText Typo="Typo.h4" Class="mb-4">Company Settings</MudText>

    <MudCard>
        <MudCardContent>
            <MudForm @ref="form" @bind-IsValid="@success">
                <MudGrid>
                    <MudItem xs="12" sm="6">
                        <MudTextField T="string" 
                                     @bind-Value="company.CompanyName" 
                                     Label="Company Name" 
                                     Required="true" 
                                     RequiredError="Company name is required!" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField T="string" 
                                     @bind-Value="company.Email" 
                                     Label="Email" 
                                     Required="true" 
                                     RequiredError="Email is required!" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField T="string" 
                                     @bind-Value="company.Phone" 
                                     Label="Phone" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField T="string" 
                                     @bind-Value="company.Website" 
                                     Label="Website" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField T="string" 
                                     @bind-Value="company.Address" 
                                     Label="Address" 
                                     Lines="3" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField T="string" 
                                     @bind-Value="company.City" 
                                     Label="City" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField T="string" 
                                     @bind-Value="company.State" 
                                     Label="State" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField T="string" 
                                     @bind-Value="company.ZipCode" 
                                     Label="Zip Code" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField T="string" 
                                     @bind-Value="company.Country" 
                                     Label="Country" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField T="string" 
                                     @bind-Value="company.TaxNumber" 
                                     Label="Tax Number" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudSelect T="CurrencyCode" @bind-Value="company.Currency" 
                                  Label="Currency" 
                                  HelperText="Select the company currency">
                            <MudSelectItem Value="@CurrencyCode.USD">USD - US Dollar</MudSelectItem>
                            <MudSelectItem Value="@CurrencyCode.EUR">EUR - Euro</MudSelectItem>
                            <MudSelectItem Value="@CurrencyCode.GBP">GBP - British Pound</MudSelectItem>
                            <MudSelectItem Value="@CurrencyCode.JPY">JPY - Japanese Yen</MudSelectItem>
                            <MudSelectItem Value="@CurrencyCode.CAD">CAD - Canadian Dollar</MudSelectItem>
                        </MudSelect>
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.h6" Class="mb-2">Company Logo</MudText>
                        <MudButton Variant="Variant.Filled" 
                                  Color="Color.Primary" 
                                  StartIcon="@Icons.Material.Filled.Upload"
                                  OnClick="UploadLogo">
                            Upload Logo
                        </MudButton>
                        @if (!string.IsNullOrEmpty(company.LogoUrl))
                        {
                            <MudText Class="mt-2">Current logo: @company.LogoUrl</MudText>
                        }
                    </MudItem>
                </MudGrid>
            </MudForm>
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" 
                      Color="Color.Primary" 
                      OnClick="SaveCompany" 
                      Disabled="!success">
                Save Changes
            </MudButton>
            <MudButton Variant="Variant.Outlined" 
                      OnClick="ResetForm">
                Reset
            </MudButton>
        </MudCardActions>
    </MudCard>
</MudContainer>

@code {
    private MudForm form = default!;
    private bool success;
    private CompanySettingsDto company = new()
    {
        CompanyName = "TOSS ERP Solutions",
        Email = "info@toss-erp.com",
        Phone = "+1 (555) 123-4567",
        Website = "https://toss-erp.com",
        Address = "123 Business Street",
        City = "New York",
        State = "NY",
        ZipCode = "10001",
        Country = "USA",
        TaxNumber = "TAX123456789",
        Currency = CurrencyCode.USD,
        LogoUrl = "/images/logo.png"
    };

    private async Task SaveCompany()
    {
        try
        {
            // Simulate API call
            await Task.Delay(1000);
            Snackbar.Add("Company settings saved successfully!", Severity.Success);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error saving company settings: {ex.Message}", Severity.Error);
        }
    }

    private async Task UploadLogo()
    {
        try
        {
            // Simulate file upload
            await Task.Delay(1000);
            company.LogoUrl = "/images/new-logo.png";
            Snackbar.Add("Logo uploaded successfully!", Severity.Success);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error uploading logo: {ex.Message}", Severity.Error);
        }
    }

    private void ResetForm()
    {
        form.ResetValidation();
    }
} 