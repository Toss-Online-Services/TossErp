<MudDialog>
    <DialogContent>
        <MudContainer Style="max-height: 500px; overflow-y: auto">
            <MudForm @ref="_form" @bind-IsValid="@_isValid">
                <MudGrid>
                    <MudItem xs="12">
                        <MudText Typo="Typo.h6" Class="mb-4">Process Return</MudText>
                        <MudText>Invoice: @InvoiceNumber</MudText>
                    </MudItem>

                    <!-- Return Items -->
                    <MudItem xs="12">
                        <MudPaper Elevation="0" Class="pa-4 mud-background-gray rounded-lg">
                            <MudText Typo="Typo.subtitle1" Class="mb-4">Items to Return</MudText>
                            @foreach (var item in _items)
                            {
                                <div class="d-flex align-center mb-4">
                                    <MudCheckBox T="bool" @bind-Value="@item.IsSelected" Color="Color.Primary" />
                                    <div class="ml-3 flex-grow-1">
                                        <MudText>@item.Name</MudText>
                                        <MudText Typo="Typo.caption">
                                            R @item.UnitPrice.ToString("N2") x @item.Quantity
                                        </MudText>
                                    </div>
                                    @if (item.IsSelected)
                                    {
                                        <MudNumericField @bind-Value="item.ReturnQuantity"
                                                       Min="1" Max="@item.Quantity"
                                                       Label="Qty" Variant="Variant.Outlined"
                                                       Class="ml-4" Style="width: 100px" />
                                    }
                                </div>
                            }
                        </MudPaper>
                    </MudItem>

                    <!-- Return Reason -->
                    <MudItem xs="12">
                        <MudSelect T="string" Label="Return Reason" Required="true"
                                 @bind-Value="_returnReason" RequiredError="Return reason is required">
                            <MudSelectItem Value="@("defective")">Defective Product</MudSelectItem>
                            <MudSelectItem Value="@("wrong")">Wrong Item</MudSelectItem>
                            <MudSelectItem Value="@("size")">Wrong Size</MudSelectItem>
                            <MudSelectItem Value="@("damaged")">Damaged in Transit</MudSelectItem>
                            <MudSelectItem Value="@("changed")">Changed Mind</MudSelectItem>
                            <MudSelectItem Value="@("other")">Other</MudSelectItem>
                        </MudSelect>
                    </MudItem>

                    @if (_returnReason == "other")
                    {
                        <MudItem xs="12">
                            <MudTextField @bind-Value="_otherReason" Label="Specify Reason"
                                        Required="true" RequiredError="Please specify the reason" />
                        </MudItem>
                    }

                    <!-- Condition -->
                    <MudItem xs="12">
                        <MudSelect T="string" Label="Item Condition" Required="true"
                                 @bind-Value="_condition" RequiredError="Item condition is required">
                            <MudSelectItem Value="@("new")">New/Unused</MudSelectItem>
                            <MudSelectItem Value="@("opened")">Opened but Undamaged</MudSelectItem>
                            <MudSelectItem Value="@("damaged")">Damaged</MudSelectItem>
                            <MudSelectItem Value="@("defective")">Defective</MudSelectItem>
                        </MudSelect>
                    </MudItem>

                    <!-- Notes -->
                    <MudItem xs="12">
                        <MudTextField @bind-Value="_notes" Label="Additional Notes"
                                    Lines="3" />
                    </MudItem>

                    <!-- Refund Method -->
                    <MudItem xs="12">
                        <MudSelect T="string" Label="Refund Method" Required="true"
                                 @bind-Value="_refundMethod" RequiredError="Refund method is required">
                            <MudSelectItem Value="@("original")">Original Payment Method</MudSelectItem>
                            <MudSelectItem Value="@("store")">Store Credit</MudSelectItem>
                            <MudSelectItem Value="@("bank")">Bank Transfer</MudSelectItem>
                        </MudSelect>
                    </MudItem>

                    @if (_refundMethod == "bank")
                    {
                        <MudItem xs="12" md="6">
                            <MudTextField @bind-Value="_bankName" Label="Bank Name"
                                        Required="true" RequiredError="Bank name is required" />
                        </MudItem>
                        <MudItem xs="12" md="6">
                            <MudTextField @bind-Value="_accountNumber" Label="Account Number"
                                        Required="true" RequiredError="Account number is required" />
                        </MudItem>
                        <MudItem xs="12" md="6">
                            <MudTextField @bind-Value="_accountHolder" Label="Account Holder"
                                        Required="true" RequiredError="Account holder name is required" />
                        </MudItem>
                        <MudItem xs="12" md="6">
                            <MudTextField @bind-Value="_branchCode" Label="Branch Code"
                                        Required="true" RequiredError="Branch code is required" />
                        </MudItem>
                    }

                    <!-- Summary -->
                    <MudItem xs="12">
                        <MudPaper Elevation="0" Class="pa-4 mud-background-gray rounded-lg">
                            <MudText Typo="Typo.subtitle1" Class="mb-4">Return Summary</MudText>
                            <div class="d-flex justify-space-between mb-2">
                                <MudText>Items Total:</MudText>
                                <MudText>R @_returnTotal.ToString("N2")</MudText>
                            </div>
                            @if (_restockingFee > 0)
                            {
                                <div class="d-flex justify-space-between mb-2">
                                    <MudText>Restocking Fee:</MudText>
                                    <MudText Color="Color.Error">-R @_restockingFee.ToString("N2")</MudText>
                                </div>
                            }
                            <MudDivider Class="my-2"/>
                            <div class="d-flex justify-space-between">
                                <MudText Typo="Typo.subtitle1">Refund Amount:</MudText>
                                <MudText Typo="Typo.subtitle1">R @(_returnTotal - _restockingFee).ToString("N2")</MudText>
                            </div>
                        </MudPaper>
                    </MudItem>
                </MudGrid>
            </MudForm>
        </MudContainer>
    </DialogContent>
    
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" 
                  OnClick="Submit" Disabled="!_isValid || !_items.Any(i => i.IsSelected)">
            Process Return
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public string InvoiceNumber { get; set; } = "";
    
    private MudForm _form = default!;
    private bool _isValid;
    
    private string _returnReason = "";
    private string _otherReason = "";
    private string _condition = "";
    private string _notes = "";
    private string _refundMethod = "";
    private string _bankName = "";
    private string _accountNumber = "";
    private string _accountHolder = "";
    private string _branchCode = "";
    
    private class ReturnItem
    {
        public string Name { get; set; } = "";
        public int Quantity { get; set; }
        public decimal UnitPrice { get; set; }
        public bool IsSelected { get; set; }
        public int ReturnQuantity { get; set; } = 1;
        public decimal Total => UnitPrice * ReturnQuantity;
    }
    
    private List<ReturnItem> _items = new()
    {
        new() { Name = "Samsung Galaxy S21", Quantity = 1, UnitPrice = 15999.99m },
        new() { Name = "Phone Case", Quantity = 1, UnitPrice = 299.99m },
        new() { Name = "Screen Protector", Quantity = 2, UnitPrice = 149.99m }
    };
    
    private decimal _returnTotal => _items
        .Where(i => i.IsSelected)
        .Sum(i => i.Total);
    
    private decimal _restockingFee => _condition == "opened" ? _returnTotal * 0.1m : 0;
    
    private void Cancel() => MudDialog.Cancel();
    
    private async Task Submit()
    {
        await _form.Validate();
        
        if (_isValid && _items.Any(i => i.IsSelected))
        {
            var returnDetails = new
            {
                InvoiceNumber,
                Items = _items.Where(i => i.IsSelected).Select(i => new
                {
                    i.Name,
                    i.ReturnQuantity,
                    i.Total
                }),
                Reason = _returnReason == "other" ? _otherReason : _returnReason,
                Condition = _condition,
                Notes = _notes,
                RefundMethod = _refundMethod,
                RefundAmount = _returnTotal - _restockingFee,
                BankDetails = _refundMethod == "bank" ? new
                {
                    BankName = _bankName,
                    AccountNumber = _accountNumber,
                    AccountHolder = _accountHolder,
                    BranchCode = _branchCode
                } : null
            };
            
            MudDialog.Close(DialogResult.Ok(returnDetails));
        }
    }
} 