<MudDialog>    <DialogContent>        <MudContainer Style="max-height: 500px; overflow-y: auto">            <MudGrid>                <MudItem xs="12">                    <MudText Typo="Typo.h6" Class="mb-4">Payment Details</MudText>                                        <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">                        <MudTabPanel Text="Cash" Icon="@Icons.Material.Filled.Money">                            <MudNumericField @bind-Value="_cashAmount" Label="Cash Amount"                                           Variant="Variant.Outlined" Min="0" Format="N2"                                           Adornment="Adornment.Start" AdornmentText="R"                                           Immediate="true" />                                                                       @if (_cashAmount > Total)                            {                                <MudAlert Severity="Severity.Info" Class="mt-3">                                    Change due: R @((_cashAmount - Total).ToString("N2"))                                </MudAlert>                            }                            else if (_cashAmount > 0)                            {                                <MudAlert Severity="Severity.Warning" Class="mt-3">                                    Remaining: R @((Total - _cashAmount).ToString("N2"))                                </MudAlert>                            }                        </MudTabPanel>                                                <MudTabPanel Text="Card" Icon="@Icons.Material.Filled.CreditCard">                            <MudTextField @bind-Value="_cardNumber" Label="Card Number"                                        Variant="Variant.Outlined" InputType="InputType.Text"                                        Mask="@(new PatternMask("0000 0000 0000 0000"))" />                                                                    <div class="d-flex gap-4 mt-4">                                <MudTextField @bind-Value="_expiryDate" Label="Expiry Date"                                            Variant="Variant.Outlined"                                            Mask="@(new PatternMask("00/00"))" />                                                                            <MudTextField @bind-Value="_cvv" Label="CVV"                                            Variant="Variant.Outlined" InputType="InputType.Password"                                            Mask="@(new PatternMask("000"))" />                            </div>                        </MudTabPanel>                                                <MudTabPanel Text="EFT" Icon="@Icons.Material.Filled.AccountBalance">                            <MudText>Bank Details:</MudText>                            <MudText Typo="Typo.body2">Account Name: TOSS ERP PTY LTD</MudText>                            <MudText Typo="Typo.body2">Bank: First National Bank</MudText>                            <MudText Typo="Typo.body2">Account: 1234 5678 9012</MudText>                            <MudText Typo="Typo.body2">Branch: 250655</MudText>                            <MudText Typo="Typo.body2">Reference: INV-@DateTime.Now.ToString("yyyyMMddHHmm")</MudText>                                                        <MudTextField @bind-Value="_proofOfPayment" Label="Reference Number"                                        Variant="Variant.Outlined" Class="mt-4" />                        </MudTabPanel>                    </MudTabs>                </MudItem>                <MudItem xs="12" Class="mt-4">                    <MudPaper Elevation="0" Class="pa-4 mud-background-gray rounded-lg">                        <MudList T="string" Dense="true">                            @foreach (var item in Items)                            {                                <MudListItem T="string">                                    <div class="d-flex justify-space-between">                                        <MudText>@($"{item.Product.Name} x {item.Quantity}")</MudText>                                        <MudText>R @item.Total.ToString("N2")</MudText>                                    </div>                                </MudListItem>                            }                            <MudDivider Class="my-2"/>                            <MudListItem T="string">                                <div class="d-flex justify-space-between">                                    <MudText Typo="Typo.subtitle1">Total</MudText>                                    <MudText Typo="Typo.subtitle1">R @Total.ToString("N2")</MudText>                                </div>                            </MudListItem>                        </MudList>                    </MudPaper>                </MudItem>            </MudGrid>        </MudContainer>    </DialogContent>        <DialogActions>        <MudButton OnClick="Cancel">Cancel</MudButton>        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Submit">            Complete Payment        </MudButton>    </DialogActions></MudDialog>@code {    [CascadingParameter] MudDialogInstance MudDialog { get; set; }        [Parameter] public decimal Total { get; set; }    [Parameter] public IEnumerable<CartItemDto> Items { get; set; }        private decimal _cashAmount;    private string _cardNumber;    private string _expiryDate;    private string _cvv;    private string _proofOfPayment;        private void Cancel() => MudDialog.Cancel();        private void Submit()    {        // In a real application, this would validate and process the payment        MudDialog.Close(DialogResult.Ok(true));    }} 