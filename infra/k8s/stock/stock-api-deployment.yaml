apiVersion: apps/v1
kind: Deployment
metadata:
  name: stock-api
  namespace: tosserp
  labels:
    app: stock-api
    version: v1.0.0
    component: stock
spec:
  replicas: 3
  selector:
    matchLabels:
      app: stock-api
  template:
    metadata:
      labels:
        app: stock-api
        version: v1.0.0
        component: stock
    spec:
      containers:
      - name: stock-api
        image: tosserp/stock-api:latest
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ASPNETCORE_URLS
          value: "http://+:80;https://+:443"
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: stock-db-secret
              key: connection-string
        - name: ConnectionStrings__EventBus
          valueFrom:
            secretKeyRef:
              name: eventbus-secret
              key: connection-string
        - name: Stock__Agent__OpenAI__ApiKey
          valueFrom:
            secretKeyRef:
              name: openai-secret
              key: api-key
        - name: Stock__Agent__OpenAI__Model
          value: "gpt-4"
        - name: Stock__Agent__OpenAI__MaxTokens
          value: "4000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      imagePullSecrets:
      - name: docker-registry-secret
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: stock-api-service
  namespace: tosserp
  labels:
    app: stock-api
    component: stock
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  selector:
    app: stock-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stock-api-ingress
  namespace: tosserp
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
spec:
  tls:
  - hosts:
    - stock-api.tosserp.com
    secretName: stock-api-tls
  rules:
  - host: stock-api.tosserp.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: stock-api-service
            port:
              number: 80
