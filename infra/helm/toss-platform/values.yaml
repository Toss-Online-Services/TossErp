# TOSS Platform Configuration Values
# Default values for toss-platform Helm chart.

# Global configuration
global:
  # Environment (development, staging, production)
  environment: production
  
  # Azure configuration
  azure:
    tenantId: ""
    subscriptionId: ""
    resourceGroup: ""
    region: eastus
    
  # Image registry
  imageRegistry: tossacr.azurecr.io
  imagePullPolicy: Always
  
  # Security
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 3000
  
  # Storage
  storageClass: managed-premium

# Namespace configuration
namespaces:
  create: true
  names:
    - toss-ai
    - toss-data
    - toss-gateway
    - toss-monitoring
    - toss-security
    - toss-workflows
    - toss-integration

# AI Service Platform
aiService:
  enabled: true
  replicaCount: 3
  image:
    repository: toss/ai-service
    tag: latest
  
  # AI Service Configuration
  config:
    defaultModelTimeout: "00:05:00"
    maxConcurrentInferences: 100
    enableModelCaching: true
    cacheExpirationMinutes: 60
    defaultPricingTier: "Standard"
  
  # Security settings
  security:
    enableContentFiltering: true
    enableInputValidation: true
    maxInputSize: 1048576
    enableAuditLogging: true
  
  # Resource quotas
  quotas:
    defaultMonthlyCredits: 10000
    defaultMaxTokensPerRequest: 4000
    defaultMaxRequestsPerMinute: 100
  
  # Azure AI Services
  azure:
    cognitiveServices:
      endpoint: ""
      region: eastus
    openai:
      endpoint: ""
      apiVersion: "2024-02-01"
  
  # Resource allocation
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
  
  # Auto-scaling
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# AI Inference Workers
inferenceWorkers:
  enabled: true
  replicaCount: 2
  image:
    repository: toss/ai-inference-worker
    tag: latest
  
  # GPU configuration
  gpu:
    enabled: true
    type: nvidia
    count: 1
    nodeSelector:
      accelerator: nvidia-gpu
  
  # Resource allocation
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
      nvidia.com/gpu: "0"
    limits:
      memory: "4Gi"
      cpu: "2000m"
      nvidia.com/gpu: "1"
  
  # Auto-scaling
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 85

# Database Configuration
postgresql:
  enabled: true
  auth:
    existingSecret: toss-data-secrets
    secretKeys:
      adminPasswordKey: postgres-admin-password
      replicationPasswordKey: postgres-replication-password
  
  architecture: replication
  primary:
    persistence:
      enabled: true
      storageClass: managed-premium
      size: 100Gi
    resources:
      requests:
        memory: "2Gi"
        cpu: "1000m"
      limits:
        memory: "4Gi"
        cpu: "2000m"
  
  readReplicas:
    replicaCount: 2
    persistence:
      enabled: true
      storageClass: managed-premium
      size: 100Gi
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"

# Redis Configuration
redis:
  enabled: true
  auth:
    enabled: true
    existingSecret: toss-data-secrets
    existingSecretPasswordKey: redis-admin-password
  
  architecture: replication
  master:
    persistence:
      enabled: true
      storageClass: managed-premium
      size: 20Gi
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"
  
  replica:
    replicaCount: 2
    persistence:
      enabled: true
      storageClass: managed-premium
      size: 20Gi
    resources:
      requests:
        memory: "256Mi"
        cpu: "125m"
      limits:
        memory: "512Mi"
        cpu: "250m"

# Monitoring Stack
monitoring:
  # Prometheus
  prometheus:
    enabled: true
    server:
      retention: "15d"
      retentionSize: "50GB"
      persistentVolume:
        enabled: true
        storageClass: managed-premium
        size: 100Gi
      resources:
        requests:
          memory: "2Gi"
          cpu: "500m"
        limits:
          memory: "4Gi"
          cpu: "1000m"
  
  # Grafana
  grafana:
    enabled: true
    persistence:
      enabled: true
      storageClassName: managed-premium
      size: 20Gi
    adminPassword: ""
    plugins:
      - grafana-kubernetes-app
      - grafana-azure-monitor-datasource
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"
  
  # Jaeger (Distributed Tracing)
  jaeger:
    enabled: true
    storage:
      type: elasticsearch
    elasticsearch:
      host: elasticsearch-master
      port: 9200

# Service Mesh
serviceMesh:
  istio:
    enabled: true
    version: "1.19.0"
    
    # Pilot configuration
    pilot:
      resources:
        requests:
          memory: "128Mi"
          cpu: "10m"
        limits:
          memory: "1Gi"
          cpu: "500m"
    
    # Gateway configuration
    gateway:
      enabled: true
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/azure-load-balancer-internal: "true"

# Security Configuration
security:
  # Key Vault integration
  keyVault:
    enabled: true
    name: ""
    
  # Network policies
  networkPolicies:
    enabled: true
    
  # Pod security standards
  podSecurityStandards:
    enabled: true
    enforce: restricted
    
  # RBAC
  rbac:
    enabled: true
    
  # Service accounts
  serviceAccounts:
    create: true

# API Gateway
apiGateway:
  enabled: true
  replicaCount: 3
  image:
    repository: toss/api-gateway
    tag: latest
  
  # Load balancer configuration
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "false"
  
  # TLS configuration
  tls:
    enabled: true
    secretName: toss-gateway-tls
  
  # Rate limiting
  rateLimiting:
    enabled: true
    requestsPerMinute: 1000
  
  # Authentication
  auth:
    oauth:
      enabled: true
      provider: azure-ad
    jwt:
      enabled: true
  
  # Resource allocation
  resources:
    requests:
      memory: "256Mi"
      cpu: "125m"
    limits:
      memory: "512Mi"
      cpu: "250m"

# Business Logic Services
businessServices:
  # Stock Management Service
  stock:
    enabled: true
    replicaCount: 2
    image:
      repository: toss/stock-service
      tag: latest
    resources:
      requests:
        memory: "256Mi"
        cpu: "125m"
      limits:
        memory: "512Mi"
        cpu: "250m"
  
  # Inventory Service
  inventory:
    enabled: true
    replicaCount: 2
    image:
      repository: toss/inventory-service
      tag: latest
    resources:
      requests:
        memory: "256Mi"
        cpu: "125m"
      limits:
        memory: "512Mi"
        cpu: "250m"
  
  # Customer Service
  customer:
    enabled: true
    replicaCount: 2
    image:
      repository: toss/customer-service
      tag: latest
    resources:
      requests:
        memory: "256Mi"
        cpu: "125m"
      limits:
        memory: "512Mi"
        cpu: "250m"

# Development and Testing
development:
  # Enable development features
  enabled: false
  
  # Debug mode
  debug: false
  
  # Hot reload
  hotReload: false
  
  # Test data seeding
  seedTestData: false

# Production optimizations
production:
  # High availability
  highAvailability: true
  
  # Resource optimization
  resourceOptimization: true
  
  # Security hardening
  securityHardening: true
  
  # Performance monitoring
  performanceMonitoring: true
