# Prometheus recording rules for TOSS ERP

groups:
  - name: toss_erp_recording_rules
    interval: 30s
    rules:
      # HTTP request rate rules
      - record: toss:http_requests:rate5m
        expr: sum(rate(http_requests_total[5m])) by (job, instance, method, status)

      - record: toss:http_requests:rate1m
        expr: sum(rate(http_requests_total[1m])) by (job, instance, method, status)

      # Error rate rules
      - record: toss:http_error_rate:5m
        expr: |
          sum(rate(http_requests_total{status=~"5.."}[5m])) by (job, instance) /
          sum(rate(http_requests_total[5m])) by (job, instance)

      # Response time rules
      - record: toss:http_request_duration:p95:5m
        expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (job, instance, le))

      - record: toss:http_request_duration:p99:5m
        expr: histogram_quantile(0.99, sum(rate(http_request_duration_seconds_bucket[5m])) by (job, instance, le))

      - record: toss:http_request_duration:avg:5m
        expr: sum(rate(http_request_duration_seconds_sum[5m])) by (job, instance) / sum(rate(http_request_duration_seconds_count[5m])) by (job, instance)

      # Business metrics rules
      - record: toss:sales:rate5m
        expr: sum(rate(toss_sales_count_total[5m])) by (instance, tenant_id)

      - record: toss:sales:amount_rate5m
        expr: sum(rate(toss_sales_amount_total[5m])) by (instance, tenant_id)

      - record: toss:stock_adjustments:rate5m
        expr: sum(rate(toss_stock_adjustments_count_total[5m])) by (instance, tenant_id)

      # Infrastructure rules
      - record: toss:cpu_usage:avg5m
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)

      - record: toss:memory_usage:percentage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100

      - record: toss:disk_usage:percentage
        expr: (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes)) * 100

      # Cache performance rules
      - record: toss:cache_hit_rate:5m
        expr: |
          sum(rate(toss_cache_hits_count_total[5m])) by (instance) /
          (sum(rate(toss_cache_hits_count_total[5m])) by (instance) + sum(rate(toss_cache_misses_count_total[5m])) by (instance))

      # Event processing rules
      - record: toss:events_published:rate5m
        expr: sum(rate(toss_events_published_count_total[5m])) by (instance, event_type)

      - record: toss:events_consumed:rate5m
        expr: sum(rate(toss_events_consumed_count_total[5m])) by (instance, event_type)

      - record: toss:event_processing_lag:5m
        expr: |
          sum(rate(toss_events_published_count_total[5m])) by (instance) -
          sum(rate(toss_events_consumed_count_total[5m])) by (instance)
